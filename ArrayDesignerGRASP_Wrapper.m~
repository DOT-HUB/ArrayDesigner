% Wrapper for example run of Array Designer

%############################################################
%######################### INPUTS ###########################
% Define paths to Example variables
% Set pathname for scalp pos, GM pos, PMDFs and weights

%% Temporary path handling
[ADpath,~] = fileparts(mfilename('fullpath'));

% Place outputs in /Results
pathnameOutput = [ADpath '/Results/results.txt'];

%% Inputs
% Use default atlas in this example
pathnameHeadModel = [ADpath '/HeadModels/MNI152_LowRes'];
% Use example ROI from paper
pathnameROI = [ADpath '/HeadModels/MNI152_LowRes/ROIs/ExampleROI_v5_DS_3.txt'];

%% Set example user inputs
ADinputs.nS = 1;             %number of source optodes
ADinputs.nD = 1;             %number of detector optodes
ADinputs.minRhoOpt = 10;     %the minimum physical distance between fibres (i.e. fibre diameter)
ADinputs.maxGoodRho = 30;    %the longest distance your fNIRS system reliably gets good quality measurements
ADinputs.maxRho = 60;        %the longest distance your fNIRS system ever gets good quality measurements
ADinputs.coverageWeight = 0; %a weighting factor for the importance of ROI coverage. 1 = coverage is equally as important as sensitivity.

ADinputs.pathnameHeadModel = pathnameHeadModel;
ADinputs.pathnameROI = pathnameROI;
ADinputs.pathnameOutput = pathnameOutput;

%% Call the GRASP algorithm
if isunix %Mac (or Linux?)
    
    [sources,detectors,signal,signalFrac,coverageFrac,coverage,time] = ArrayDesignerGRASP_MacLinux(ADinputs,pathnameOutput);
    
    ADresults.source = sources;
    ADresults.detector = detectors;
    ADresults.signal = signal;
    ADresults.signalPerc= signalFrac*100;
    ADresults.coveragePerc = coverageFrac*100;
    ADresults.time = time;
    
    outname = [pathnameOutput '/ArrayDesignerResults_' datestr(now,'YYYYmmddHHMMss') '.mat'];
    save(outname,'ADresults');
end


